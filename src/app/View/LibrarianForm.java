package app.View;


import app.Util.Helper;
import app.View.Base.LMSForm;
import app.Controller.MainViewController;
import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class LibrarianForm extends LMSForm {
    public JPanel Root;
    public JPanel TopTitlePanel;
    public JLabel titleLabel;
    public JPanel Main;
    public JTabbedPane tabbedPane1;
    public JButton logOutButton;
    public JPanel LogOutPanel;
    public JList list1;
    public JButton blockButton;
    public JButton fineButton;
    public JButton returnButton;




    public static void main(String[] args) {
        JFrame frame = new JFrame("LibrarianForm");
        frame.setContentPane(new LibrarianForm().Root);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        Root = new JPanel();
        Root.setLayout(new BorderLayout(0, 0));
        TopTitlePanel = new JPanel();
        TopTitlePanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        TopTitlePanel.setBackground(new Color(-12620058));
        Font TopTitlePanelFont = this.$$$getFont$$$("Arial", Font.PLAIN, 18, TopTitlePanel.getFont());
        if (TopTitlePanelFont != null) TopTitlePanel.setFont(TopTitlePanelFont);
        Root.add(TopTitlePanel, BorderLayout.NORTH);
        titleLabel = new JLabel();
        Font titleLabelFont = this.$$$getFont$$$("Arial", Font.PLAIN, 18, titleLabel.getFont());
        if (titleLabelFont != null) titleLabel.setFont(titleLabelFont);
        titleLabel.setText("Librarian");
        TopTitlePanel.add(titleLabel);
        Main = new JPanel();
        Main.setLayout(new BorderLayout(0, 0));
        Root.add(Main, BorderLayout.CENTER);
        tabbedPane1 = new JTabbedPane();
        Main.add(tabbedPane1, BorderLayout.CENTER);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        tabbedPane1.addTab("Books", panel1);
        final JLabel label1 = new JLabel();
        label1.setText("polymorphism, from StudenForm Main panel");
        panel1.add(label1);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        tabbedPane1.addTab("Students", panel2);
        final JScrollPane scrollPane1 = new JScrollPane();
        panel2.add(scrollPane1, BorderLayout.CENTER);
        list1 = new JList();
        final DefaultListModel defaultListModel1 = new DefaultListModel();
        defaultListModel1.addElement("1. StudentName             borrowed books");
        list1.setModel(defaultListModel1);
        scrollPane1.setViewportView(list1);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        tabbedPane1.addTab("Report", panel3);
        LogOutPanel = new JPanel();
        LogOutPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        Root.add(LogOutPanel, BorderLayout.SOUTH);
        logOutButton = new JButton();
        logOutButton.setText("Log out");
        LogOutPanel.add(logOutButton);
        blockButton = new JButton();
        blockButton.setText("Block ");
        LogOutPanel.add(blockButton);
        fineButton = new JButton();
        fineButton.setText("Fine");
        LogOutPanel.add(fineButton);
        returnButton = new JButton();
        returnButton.setText("Return");
        LogOutPanel.add(returnButton);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return Root;
    }


}
